#!/usr/bin/env bash

#SHOULD_COPY_CFSSL_CA_CERTIFICATE=0
if [[ -n "${DOCKER_DEVBOX_SSL}" && "${DOCKER_DEVBOX_SSL}" == "cfssl-cli" ]]; then
  CFSSL_CLI_EXE=$(command -v cfssl-cli)

  if [[ -x "$CFSSL_CLI_EXE" ]]; then
    CONFIG="$DOCKER_DEVBOX_DIR/.cfssl-cli/config.yml"
    DESTINATION="$DOCKER_DEVBOX_DIR/.certs"

    CONFIG_OPTION=""
    if [ -f "$CONFIG" ]; then
      CONFIG_OPTION="--config ""$CONFIG"
    fi

    for RAWDOMAIN in $(dc config | sed -n -e 's/\s*VIRTUAL_HOST: //p'); do
      SHOULD_COPY_CFSSL_CA_CERTIFICATE=0
      while read -sr DOMAIN; do
        DESTINATION_CRT="$DESTINATION/${DOMAIN}.crt"
        DESTINATION_KEY="$DESTINATION/${DOMAIN}.key"

        if [[ ! -f "$DESTINATION_CRT" ]] || [[ ! -f "$DESTINATION_KEY" ]]; then
          mkdir -p "$DESTINATION"

          echo "$(tput setaf 3)Generating project certificate (${DOMAIN})$(tput sgr0)"
          # shellcheck disable=SC2086
          if cfssl-cli gencert ${CONFIG_OPTION} --destination "$DESTINATION" "${DOMAIN}"; then
            echo "$(tput setaf 2)Project certificate has been generated (${DOMAIN})$(tput sgr0)"
            SHOULD_COPY_CFSSL_CA_CERTIFICATE=1
          else
            echo "$(tput setaf 1)Project certificate generation has failed (${DOMAIN})$(tput sgr0)"
          fi
        else
          echo "$(tput setaf 7)Project certificate exists (${DOMAIN})$(tput sgr0)"
          SHOULD_COPY_CFSSL_CA_CERTIFICATE=1
        fi
      done < <(echo "$RAWDOMAIN" | tr ',' '\n')
    done
  else
    echo "$(tput setaf 1)Project certificate generation has been skipped because cfssl-cli is not available$(tput sgr0)"
  fi
fi
