#!/usr/bin/env bash

GENERATED_FILEPATH="$DOCKER_DEVBOX_DIR/.docker-compose.reverse-proxy.generated.yml"
rm -f "$GENERATED_FILEPATH"

if [[ -n $DOCKER_DEVBOX_DISABLE_REVERSE_PROXY_SERVICES ]]; then
  echo "$(tput setaf 3)Reverse proxy services generation is disabled.$(tput sgr0)"
elif [[ -n $DOCKER_DEVBOX_REVERSE_PROXY_SERVICES ]]; then
  if [[ -n $DOCKER_DEVBOX_REVERSE_PROXY_TYPE ]]; then
    DC_CONFIG=$(dc config)

    SERVICE_SPECS=("$DOCKER_DEVBOX_REVERSE_PROXY_SERVICES")
    echo "# This configuration file has been automatically generated by docker-devbox"> "$GENERATED_FILEPATH"
    # TODO: Détecter la version sur le docker-compose par défaut
    cat << EOF >> "$GENERATED_FILEPATH" | mo
version: '3.7'
networks:
  reverse-proxy:
    name: '\${DOCKER_DEVBOX_REVERSE_PROXY_NETWORK}'
    external: true
EOF
    PREVIOUS_SERVICE_NAME=""
    for SERVICE_SPEC in $SERVICE_SPECS
    do
      SERVICE_NAME=$(echo "$SERVICE_SPEC" | awk -F':' '{print $1}')
      SERVICE_PORT=$(echo "$SERVICE_SPEC" | awk -F':' '{print $2}')
      SERVICE_DOMAIN_PREFIX=$(echo "$SERVICE_SPEC" | awk -F':' '{print $3}')
      if [[ -n "$SERVICE_DOMAIN_PREFIX" ]]; then
        SERVICE_DOMAIN_PREFIX="$SERVICE_DOMAIN_PREFIX."
      fi
      ROUTER_DOMAIN_SUFFIX=$(echo "$SERVICE_SPEC" | awk -F':' '{print $3}')
      if [[ -n "$ROUTER_DOMAIN_SUFFIX" ]]; then
        ROUTER_DOMAIN_SUFFIX="-$ROUTER_DOMAIN_SUFFIX"
      fi

      if ! echo "$DC_CONFIG" | grep -qE "^  $SERVICE_NAME:$"; then
        echo "$(tput setaf 3)$SERVICE_NAME is not available$(tput sgr0)"
      else
        TRAEFIK_ENABLE="      - 'traefik.enable=true'"
        if [[ "$SERVICE_NAME" == "$PREVIOUS_SERVICE_NAME" ]]; then
          TRAEFIK_ENABLE=""
          NGINX_PROXY_VIRTUAL_HOST="$NGINX_PROXY_VIRTUAL_HOST,$SERVICE_DOMAIN_PREFIX\${DOCKER_DEVBOX_DOMAIN_PREFIX}.\${DOCKER_DEVBOX_DOMAIN}"
        else
          NGINX_PROXY_VIRTUAL_HOST="$SERVICE_DOMAIN_PREFIX\${DOCKER_DEVBOX_DOMAIN_PREFIX}.\${DOCKER_DEVBOX_DOMAIN}"
          GENERATED_FILEPATH_NETWORKS_TMP="$GENERATED_FILEPATH.networks.tmp"
          cat << EOF > "$GENERATED_FILEPATH_NETWORKS_TMP" | mo
services:
  $SERVICE_NAME:
    networks:
      - default
      - reverse-proxy
EOF

          if [[ -f "$GENERATED_FILEPATH_NETWORKS_TMP" ]]; then
            # Merge with main file
            yq merge --inplace --append "$GENERATED_FILEPATH" "$GENERATED_FILEPATH_NETWORKS_TMP"
            rm -f "$GENERATED_FILEPATH_NETWORKS_TMP"
          fi
        fi

        GENERATED_FILEPATH_TMP="$GENERATED_FILEPATH.tmp"
        if [[ "$DOCKER_DEVBOX_REVERSE_PROXY_TYPE" == "traefik (v1)" ]]; then
          cat << EOF > "$GENERATED_FILEPATH_TMP" | mo
services:
  $SERVICE_NAME:
    labels:
${TRAEFIK_ENABLE}
      - 'traefik.${SERVICE_DOMAIN_PREFIX}frontend.rule=Host:$SERVICE_DOMAIN_PREFIX\${DOCKER_DEVBOX_DOMAIN_PREFIX}.\${DOCKER_DEVBOX_DOMAIN}'
      - 'traefik.${SERVICE_DOMAIN_PREFIX}port=$SERVICE_PORT'
EOF
        elif [[ "$DOCKER_DEVBOX_REVERSE_PROXY_TYPE" == "traefik (v2)" ]]; then
          cat << EOF > "$GENERATED_FILEPATH_TMP" | mo
services:
  $SERVICE_NAME:
    labels:
${TRAEFIK_ENABLE}
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}${ROUTER_DOMAIN_SUFFIX}.rule=Host(\`$SERVICE_DOMAIN_PREFIX\${DOCKER_DEVBOX_DOMAIN_PREFIX}.\${DOCKER_DEVBOX_DOMAIN}\`)'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}${ROUTER_DOMAIN_SUFFIX}.service=${COMPOSE_PROJECT_NAME}${ROUTER_DOMAIN_SUFFIX}'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}${ROUTER_DOMAIN_SUFFIX}-tls.rule=Host(\`$SERVICE_DOMAIN_PREFIX\${DOCKER_DEVBOX_DOMAIN_PREFIX}.\${DOCKER_DEVBOX_DOMAIN}\`)'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}${ROUTER_DOMAIN_SUFFIX}-tls.tls=true'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}${ROUTER_DOMAIN_SUFFIX}-tls.service=${COMPOSE_PROJECT_NAME}${ROUTER_DOMAIN_SUFFIX}'
      - 'traefik.http.services.${COMPOSE_PROJECT_NAME}${ROUTER_DOMAIN_SUFFIX}.loadbalancer.server.port=$SERVICE_PORT'
EOF
        elif [[ "$DOCKER_DEVBOX_REVERSE_PROXY_TYPE" == "nginx-proxy" ]]; then
          cat << EOF > "$GENERATED_FILEPATH_TMP" | mo
services:
  $SERVICE_NAME:
    environment:
      - 'VIRTUAL_HOST=$NGINX_PROXY_VIRTUAL_HOST'
      - 'VIRTUAL_PORT=$SERVICE_PORT'
EOF
        fi

        if [[ -f "$GENERATED_FILEPATH_TMP" ]]; then
          # Merge with main file
          if [[ "$DOCKER_DEVBOX_REVERSE_PROXY_TYPE" == "nginx-proxy" ]]; then
            yq merge --inplace "$GENERATED_FILEPATH" "$GENERATED_FILEPATH_TMP"
          else
            yq merge --inplace --append "$GENERATED_FILEPATH" "$GENERATED_FILEPATH_TMP"
          fi
          rm -f "$GENERATED_FILEPATH_TMP"
        fi

        echo "$(tput setaf 2)$SERVICE_NAME is configured on reverse proxy ($SERVICE_DOMAIN_PREFIX${DOCKER_DEVBOX_DOMAIN_PREFIX}.${DOCKER_DEVBOX_DOMAIN})$(tput sgr0)"
        PREVIOUS_SERVICE_NAME="$SERVICE_NAME"
      fi
    done
  fi
fi
