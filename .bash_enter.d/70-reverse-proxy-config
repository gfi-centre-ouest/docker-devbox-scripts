#!/usr/bin/env bash

SHOULD_RESTART_NGINX_PROXY="${SHOULD_RESTART_NGINX_PROXY-0}"

PROJECT_NGINX_PROXY_PATH="$DOCKER_DEVBOX_DIR/.nginx-proxy"
PROJECT_TRAEFIK_PATH="$DOCKER_DEVBOX_DIR/.traefik"

if [ -e "${PROJECT_TRAEFIK_PATH}" ]; then
  rm -f "$PROJECT_TRAEFIK_PATH/"*.ssl.toml
fi

for DOMAIN in $(dc config | sed -n -e 's/\s*VIRTUAL_HOST: //p'); do
  if [ -e "${DOCKER_DEVBOX_TRAEFIK_PATH}" ]; then
    mkdir -p "$PROJECT_TRAEFIK_PATH"

    cat <<EOF > "$PROJECT_TRAEFIK_PATH/${DOMAIN}.ssl.toml"
# This configuration file has been automatically generated by docker-devbox
[[tls]]
  entryPoints = ["https"]
  [tls.certificate]
    certFile = "/certs/${DOMAIN}.crt"
    keyFile = "/certs/${DOMAIN}.key"
EOF
  for TRAEFIK_FILE in "$PROJECT_TRAEFIK_PATH"/*; do
    # shellcheck disable=SC2001
    TRAEFIK_FILE_DEST_BASENAME=$(basename "$(echo "$TRAEFIK_FILE" | sed -e 's/\[domain\]/'"${DOCKER_DEVBOX_DOMAIN_PREFIX}.${DOCKER_DEVBOX_DOMAIN}"'/g')")

    _cp_file_if_different "$TRAEFIK_FILE" "$DOCKER_DEVBOX_TRAEFIK_PATH/config/$TRAEFIK_FILE_DEST_BASENAME"
  done
  fi

  if [ -e "${DOCKER_DEVBOX_NGINX_PROXY_PATH}" ]; then
    for VHOST_CONF in "$PROJECT_NGINX_PROXY_PATH"/*; do
      # shellcheck disable=SC2001
      VHOST_CONF_DEST_BASENAME=$(basename "$(echo "$VHOST_CONF" | sed -e 's/\[domain\]/'"${DOCKER_DEVBOX_DOMAIN_PREFIX}.${DOCKER_DEVBOX_DOMAIN}"'/g')")

      if [[ "$DOMAIN" == "$VHOST_CONF_DEST_BASENAME" ]]; then
        if _cp_file_if_different "$VHOST_CONF" "$DOCKER_DEVBOX_NGINX_PROXY_PATH/vhost.d/$VHOST_CONF_DEST_BASENAME"; then
          SHOULD_RESTART_NGINX_PROXY=1
        fi
      fi

      if [[ "$DOMAIN""_location" == "$VHOST_CONF_DEST_BASENAME" ]]; then
        if _cp_file_if_different "$VHOST_CONF" "$DOCKER_DEVBOX_NGINX_PROXY_PATH/vhost.d/$VHOST_CONF_DEST_BASENAME"; then
          SHOULD_RESTART_NGINX_PROXY=1
        fi
      fi
    done
  fi
done

if [ "$SHOULD_RESTART_NGINX_PROXY" -eq "1" ]; then
  if [ "$( (docker ps -a | grep nginx-proxy && docker inspect -f "{{.State.Running}}" nginx-proxy) | tail -1)" == "true" ]; then
    echo "$(tput setaf 3)Restarting nginx-proxy container ...$(tput sgr0)"
    docker restart nginx-proxy
    echo "$(tput setaf 2)nginx-proxy container has been restarted.$(tput sgr0)"
  fi
fi
